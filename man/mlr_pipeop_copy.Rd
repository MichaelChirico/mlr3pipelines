% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpCopy.R
\docType{data}
\name{mlr_pipeop_copy}
\alias{mlr_pipeop_copy}
\alias{PipeOpCopy}
\title{PipeOpCopy}
\format{\code{\link{R6Class}} object inheriting from \code{\link{PipeOp}}.}
\usage{
PipeOpCopy
}
\description{
Copies its input \code{outnum} times. This is usually not needed,
because copying happens automatically when one \code{PipeOp} is followed
by multiple different \code{PipeOp}s. However, when constructing big
Graphs using the \code{\%>>\%}-operator, \code{PipeOpCopy} can be helpful to
specify which PipeOp gets connected to which.
}
\section{Methods}{

\itemize{
\item \code{PipeOpEnsemble$new(outnum, id)} \cr
(\code{numeric(1)}, \code{character(1)}) -> \code{self} \cr
Constructor. \code{outnum} determines the number of output channels and
copies that will be made.
}
}

\examples{
# The following copies the output of 'scale' automatically to both
# 'pca' and 'nop'
mlr_pipeops$get("scale") \%>>\%
  gunion(list(
    mlr_pipeops$get("pca"),
    mlr_pipeops$get("nop")
  ))

# The following would not work: the '\%>>\%'-operator does not know
# which output to connect to which input
# > gunion(list(
# >   mlr_pipeops$get("scale"),
# >   mlr_pipeops$get("select")
# > )) \%>>\%
# >   gunion(list(
# >     mlr_pipeops$get("pca"),
# >     mlr_pipeops$get("nop"),
# >     mlr_pipeops$get("impute")
# >   ))
# Instead, the 'copy' operator makes clear which output gets copied.
gunion(list(
  mlr_pipeops$get("scale") \%>>\% mlr_pipeops$get("copy", outnum = 2),
  mlr_pipeops$get("select")
)) \%>>\%
  gunion(list(
    mlr_pipeops$get("pca"),
    mlr_pipeops$get("nop"),
    mlr_pipeops$get("impute")
  ))
}
\seealso{
Other PipeOps: \code{\link{PipeOpEnsemble}},
  \code{\link{PipeOpTaskPreproc}}, \code{\link{PipeOp}},
  \code{\link{mlr_pipeop_apply}},
  \code{\link{mlr_pipeop_balancesample}},
  \code{\link{mlr_pipeop_branch}},
  \code{\link{mlr_pipeop_chunk}},
  \code{\link{mlr_pipeop_encode}},
  \code{\link{mlr_pipeop_featureunion}},
  \code{\link{mlr_pipeop_filter}},
  \code{\link{mlr_pipeop_impute}},
  \code{\link{mlr_pipeop_learner}},
  \code{\link{mlr_pipeop_majorityvote}},
  \code{\link{mlr_pipeop_modelavg}},
  \code{\link{mlr_pipeop_mutate}},
  \code{\link{mlr_pipeop_nop}},
  \code{\link{mlr_pipeop_pca}},
  \code{\link{mlr_pipeop_scale}},
  \code{\link{mlr_pipeop_select}},
  \code{\link{mlr_pipeop_subsample}},
  \code{\link{mlr_pipeop_unbranch}},
  \code{\link{mlr_pipeops}}
}
\concept{PipeOps}
\keyword{datasets}
