% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTaskPreproc.R
\name{PipeOpTaskPreprocSimple}
\alias{PipeOpTaskPreprocSimple}
\title{PipeOpTaskPreprocSimple}
\format{\link{R6Class} PipeOpTaskPreprocSimple}
\description{
Base class for handling many "preprocessing" operations that
that perform essentially the same operation during training and prediction.
Instead implementing a train_task and a predict_task operation, only
a \code{get_state()} and a \code{transform()} operation needs to be defined,
both of which take one argument: a Task.

\code{get_state} must not change its input value in-place and must return
something that will be written into \code{$state}
(which must not be NULL), \code{transform()} must modify its argument in-state;
it is called both during training and prediction.

This inherits from \link{PipeOpTaskPreproc} and behaves essentially the same.
}
\seealso{
Other PipeOp: \code{\link{PipeOpBranch}},
  \code{\link{PipeOpChunk}}, \code{\link{PipeOpCopy}},
  \code{\link{PipeOpDownsample}},
  \code{\link{PipeOpEnsemble}},
  \code{\link{PipeOpFeatureUnion}},
  \code{\link{PipeOpLearner}},
  \code{\link{PipeOpMajorityVote}},
  \code{\link{PipeOpModelAvg}}, \code{\link{PipeOpNULL}},
  \code{\link{PipeOpPCA}}, \code{\link{PipeOpScale}},
  \code{\link{PipeOpTaskPreproc}},
  \code{\link{PipeOpUnbranch}}, \code{\link{PipeOp}}
}
\concept{PipeOp}
