% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTrafo.R
\name{mlr_pipeops_logtrafo}
\alias{mlr_pipeops_logtrafo}
\alias{PipeOpLogtrafo}
\title{PipeOpLogtrafo}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOpInvertiblePreproc}}/\code{\link{PipeOp}}
}
\description{
#FIXME: Just some toy example for regression tasks. Needs more checks etc.
}
\section{Construction}{

#FIXME:\preformatted{PipeOpLogtrafo$new(id)
}
\itemize{
\item \code{id} :: \code{character(1)}\cr
Identifier of resulting object. See \verb{$id} slot of \code{\link{PipeOp}}.
}
}

\section{Input and Output Channels}{

#FIXME:
}

\section{State}{

#FIXME:
}

\section{Internals}{

#FIXME:
}

\section{Methods}{

Methods inherited from \code{\link{PipeOpInvertiblePreproc}}/\code{\link{PipeOp}}, as well as:
#FIXME:
}

\examples{
library(mlr3)
task = tsk("boston_housing")
po1 = PipeOpLogtrafo$new()
po1$train(list(task))
po1$predict(list(task))

g = Graph$new()
g$add_pipeop(PipeOpLogtrafo$new())
g$add_pipeop(LearnerRegrRpart$new())
g$add_pipeop(PipeOpInverter$new())
g$add_edge(src_id = "logtrafo", dst_id = "inverter", src_channel = 1, dst_channel = 1)
g$add_edge(src_id = "logtrafo", dst_id = "regr.rpart", src_channel = 2, dst_channel = 1)
g$add_edge(src_id = "regr.rpart", dst_id = "inverter", src_channel = 1, dst_channel = 2)

g$train(task)
g$predict(task)
}
\seealso{
Other PipeOps: 
\code{\link{PipeOpEnsemble}},
\code{\link{PipeOpImpute}},
\code{\link{PipeOpInvertiblePreproc}},
\code{\link{PipeOpTaskPreproc}},
\code{\link{PipeOp}},
\code{\link{mlr_pipeops_boxcox}},
\code{\link{mlr_pipeops_branch}},
\code{\link{mlr_pipeops_chunk}},
\code{\link{mlr_pipeops_classbalancing}},
\code{\link{mlr_pipeops_classifavg}},
\code{\link{mlr_pipeops_classweights}},
\code{\link{mlr_pipeops_colapply}},
\code{\link{mlr_pipeops_collapsefactors}},
\code{\link{mlr_pipeops_copy}},
\code{\link{mlr_pipeops_datefeatures}},
\code{\link{mlr_pipeops_encodeimpact}},
\code{\link{mlr_pipeops_encodelmer}},
\code{\link{mlr_pipeops_encode}},
\code{\link{mlr_pipeops_featureunion}},
\code{\link{mlr_pipeops_filter}},
\code{\link{mlr_pipeops_fixfactors}},
\code{\link{mlr_pipeops_histbin}},
\code{\link{mlr_pipeops_ica}},
\code{\link{mlr_pipeops_imputehist}},
\code{\link{mlr_pipeops_imputemean}},
\code{\link{mlr_pipeops_imputemedian}},
\code{\link{mlr_pipeops_imputenewlvl}},
\code{\link{mlr_pipeops_imputesample}},
\code{\link{mlr_pipeops_inverter}},
\code{\link{mlr_pipeops_kernelpca}},
\code{\link{mlr_pipeops_learner}},
\code{\link{mlr_pipeops_missind}},
\code{\link{mlr_pipeops_modelmatrix}},
\code{\link{mlr_pipeops_mutate}},
\code{\link{mlr_pipeops_nop}},
\code{\link{mlr_pipeops_pca}},
\code{\link{mlr_pipeops_quantilebin}},
\code{\link{mlr_pipeops_regravg}},
\code{\link{mlr_pipeops_removeconstants}},
\code{\link{mlr_pipeops_scalemaxabs}},
\code{\link{mlr_pipeops_scalerange}},
\code{\link{mlr_pipeops_scale}},
\code{\link{mlr_pipeops_select}},
\code{\link{mlr_pipeops_smote}},
\code{\link{mlr_pipeops_spatialsign}},
\code{\link{mlr_pipeops_subsample}},
\code{\link{mlr_pipeops_unbranch}},
\code{\link{mlr_pipeops_yeojohnson}},
\code{\link{mlr_pipeops}}
}
\concept{PipeOps}
